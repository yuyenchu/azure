<!-- views/pages/manage.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
	<%- include('../partials/head') %>
</head>

<body>
    <header>
        <%- include('../partials/header') %>
    </header>
    <div class="container-fluid content mb-3">
        <h3 style="text-align:center">
            <b>Device List</b>
        </h3>
        <button type="button" class="btn btn-outline-primary m-2" data-toggle="modal" data-target="#addModal">add view</button>
        <button type="button" class="btn btn-outline-primary m-2" id ="deleBtn">delete view</button>
        <div class="d-flex justify-content-center">
            <label id="deleResult"></label>
        </div>
        <div class="container">
            <div class="row">
              <div class="col-12">
                <table class="table table-striped ">
                    <thead>
                        <tr>
                            <th scope="col">
                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox" class="select-all form-check-input" id="selectall">
                                </div>
                            </th>
                            <th scope="col">Name</th>
                            <th scope="col">Device Id</th>
                            <th scope="col">Status</th>
                            <th scope="col">ThingsPro ver.</th>
                        </tr>
                    </thead>
                    <tbody id="tbody">
                    </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade show" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalTitle" aria-modal="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                <h5 class="modal-title" id="addModalTitle">Add view</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="checkReload()">
                    <span aria-hidden="true">Ã—</span>
                </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="idInput">Device Id</label>
                        <input type="deviceId" class="form-control" id="idInput">
                    </div>
                    <div class="d-flex justify-content-center">
                        <label id="addResult"></label>
                    </div>
                </div>
                <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="checkReload()">Close</button>
                <button type="button" class="btn btn-primary" id="addBtn">Add</button>
                </div>
            </div>
        </div>
    </div>
    <script src="helper.js"></script>
    <script>
		const buttonSpinner = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
        var devices = <%- JSON.stringify(devices) %>;
        var twins = <%- JSON.stringify(twins) %>;
        var added = false;

        function checkReload() {
            if (added) {
                location.reload();
            }
        }

        function drawTable() {
            $("#tbody").html("");
            Object.keys(devices).forEach(element => {
                $("#tbody").append('<tr><td><div class="custom-control custom-checkbox">'+
                    '<input type="checkbox" class="select-item form-check-input" id="'+
                    element+'"></div></td><td>'+displayName(twins[element], element)+
                    '</td><td>'+element+'</td><td>'+devices[element]["state"]+'</td><td>'+
                    displayTPEVer(twins[element])+'</td></tr>');
            });
        }      
        drawTable();

        //column checkbox select all or cancel
        $("input.select-all").click(function () {
            var checked = this.checked;
            $("input.select-item").each(function (index,item) {
                item.checked = checked;
            });
        });
        //check selected items
        $("input.select-item").click(function () {
            var checked = this.checked;
            console.log(checked);
            checkSelected();
        });

        $("#addBtn").click(function () {
            $("#addBtn").html(buttonSpinner);
            $.ajax({
                type: 'POST',
				url: "/view/"+$("#idInput").val().trim(),
				success: function (response, textStatus, request) {
                    $("#addResult").text(response);
                    if (response == "view added successfully") {
                        added = true;
                    }
                    $("#addBtn").html("Add view");
				}
			}).fail(function (jqXHR, textStatus, errorThrown) { 
                $("#addResult").text(jqXHR.status+" "+jqXHR.statusText);
                $("#addBtn").html("Add view");
			});
        });

        $("#deleBtn").click(function () {
            $("input.select-item").each(function (index,item) {
                if (item.checked){
                    $.ajax({
                        type: 'DELETE',
                        url: "/view/"+item.id,
                        success: function (response, textStatus, request) {
                            delete devices[item.id];
                            $("#deleResult").text(response);
                            drawTable();
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) { 
                        $("#deleResult").text(jqXHR.status+" "+jqXHR.statusText);
                    });
                }
            });
        });
        //check is all selected
        function checkSelected() {
            var all = $("input.select-all")[0];
            var total = $("input.select-item").length;
            var len = $("input.select-item:checked:checked").length;
            console.log("total:"+total);
            console.log("len:"+len);
            all.checked = len===total;
        }

    </script>
</body>